services:
  Myrtus-db:
    image: postgres:latest
    container_name: Myrtus.Db
    environment:
      POSTGRES_DB: Myrtus
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./containers/database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  Myrtus-redis:
    image: redis:latest
    container_name: Myrtus.Redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  Myrtus-mongodb:
    image: mongo:latest
    container_name: Myrtus.MongoDb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - ./containers/mongodb:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "-u", "mongo", "-p", "mongo", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  Myrtus-seq:
    image: datalust/seq:latest
    container_name: Myrtus.Seq
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:5341"
      - "8081:80"
    volumes:
      - ./containers/logging/seq/data:/data

  Myrtus-api:
    image: ${DOCKER_REGISTRY-}myrtusapi
    container_name: Myrtus.WebAPI
    build:
      context: .
      dockerfile: src/Myrtus.Clarity.WebAPI/Dockerfile
    depends_on:
      Myrtus-db:
        condition: service_healthy
      Myrtus-redis:
        condition: service_healthy
      Myrtus-mongodb:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Release
      ASPNETCORE_URLS: "http://+:5000"
    ports:
      - "5000:5000"
    volumes:
      - ./usersecrets:/app/.microsoft/usersecrets:ro
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.backend.rule=(Host("localhost") && (PathPrefix(`/api`) || PathPrefix(`/notificationHub`) || PathPrefix(`/auditLogHub`)))'
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=5000"

  Myrtus-redis-insight:
    image: redis/redisinsight:latest
    container_name: Myrtus.RedisInsight
    restart: always
    ports:
      - "5540:5540"
    volumes:
      - redis-insight:/data
    environment:
      RIHOST: "redis://Myrtus-redis:6379"
    depends_on:
      Myrtus-redis:
        condition: service_healthy

  Myrtus-traefik:
    image: traefik:v2.9
    container_name: Myrtus.Traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--api.dashboard=true"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  redis-insight: