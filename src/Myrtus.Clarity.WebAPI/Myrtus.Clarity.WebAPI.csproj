<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>94864661-e9d7-455e-aa45-25a41bc0e6ae</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerfileContext>..\..</DockerfileContext>
		<DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
	</PropertyGroup>

	<ItemGroup>
		<!-- Existing Package References -->
		<PackageReference Include="AspNetCore.HealthChecks.Redis" Version="8.0.1" />
		<PackageReference Include="AspNetCore.HealthChecks.UI.Client" Version="8.0.1" />
		<PackageReference Include="FluentValidation" Version="11.11.0" />
		<PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="9.0.0" />
		<PackageReference Include="Bogus" Version="35.6.1" />
		<PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="9.0.0" />
		<PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="9.0.1" />
		<PackageReference Include="NSwag.AspNetCore" Version="14.2.0" />
		<PackageReference Include="Quartz.Extensions.Hosting" Version="3.13.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="9.0.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Serilog.AspNetCore" Version="8.0.3" />
		<PackageReference Include="Serilog.Sinks.Seq" Version="8.0.0" />
		<PackageReference Include="StackExchange.Redis" Version="2.8.16" />
		<PackageReference Include="MongoDB.Driver" Version="3.1.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="7.2.0" />
	</ItemGroup>

	<ItemGroup>
		<!-- Existing Project References -->
		<ProjectReference Include="..\..\core\Myrtus.Clarity.Core.Application.Abstractions.Module\Myrtus.Clarity.Core.Application.Abstractions.Module.csproj" />
		<ProjectReference Include="..\..\core\Myrtus.Clarity.Core.Domain.Abstractions\Myrtus.Clarity.Core.Domain.Abstractions.csproj" />
		<ProjectReference Include="..\..\core\Myrtus.Clarity.Core.Infrastructure.Localization\Myrtus.Clarity.Core.Infrastructure.Localization.csproj" />
		<ProjectReference Include="..\..\core\Myrtus.Clarity.Core.WebApi\Myrtus.Clarity.Core.WebApi.csproj" />
		<ProjectReference Include="..\..\modules\cms\src\CMSModule\CMSModule.csproj" />
		<ProjectReference Include="..\Myrtus.Clarity.Application\Myrtus.Clarity.Application.csproj" />
		<ProjectReference Include="..\Myrtus.Clarity.Infrastructure\Myrtus.Clarity.Infrastructure.csproj" />
	</ItemGroup>

	<ItemGroup>
		<!-- Existing Package Updates -->
		<PackageReference Update="SonarAnalyzer.CSharp" Version="9.32.0.97167">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<!-- 1. Include Module DLLs and PDBs as Content to Copy to Publish Directory -->
		<Content Include="..\..\modules\**\bin\$(Configuration)\$(TargetFramework)\*.dll">
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			<!-- This Link element ensures that the DLLs are placed under the 'modules' folder in the publish output -->
			<Link>modules\%(RecursiveDir)%(Filename)%(Extension)</Link>
		</Content>
		<Content Include="..\..\modules\**\bin\$(Configuration)\$(TargetFramework)\*.pdb">
			<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
			<Link>modules\%(RecursiveDir)%(Filename)%(Extension)</Link>
		</Content>
	</ItemGroup>

	<ItemGroup>
	  <Content Remove="..\..\modules\cms\src\CMSModule\bin\Debug\net9.0\**" />
	</ItemGroup>

	<!-- 2. Define a Target to Copy Module Assemblies After Publish -->
	<Target Name="CopyModulesAfterPublish" AfterTargets="Publish">
		<!-- Define the destination path for modules within the publish directory -->
		<PropertyGroup>
			<!-- 'PublishDir' is a built-in property that points to the publish output folder -->
			<ModulesPublishPath>$(PublishDir)modules\</ModulesPublishPath>
		</PropertyGroup>

		<!-- Create the modules directory if it doesn't exist -->
		<MakeDir Directories="$(ModulesPublishPath)" Condition="!Exists('$(ModulesPublishPath)')" />

		<!-- Collect all module DLLs and PDBs -->
		<ItemGroup>
			<ModuleAssemblies Include="..\..\modules\**\bin\$(Configuration)\$(TargetFramework)\*.dll" />
			<ModulePDBs Include="..\..\modules\**\bin\$(Configuration)\$(TargetFramework)\*.pdb" />
		</ItemGroup>

		<!-- Copy module assemblies -->
		<Copy SourceFiles="@(ModuleAssemblies)" DestinationFolder="$(ModulesPublishPath)" SkipUnchangedFiles="true" />

		<!-- Copy module PDBs -->
		<Copy SourceFiles="@(ModulePDBs)" DestinationFolder="$(ModulesPublishPath)" SkipUnchangedFiles="true" />
	</Target>

	<ProjectExtensions>
		<VisualStudio>
			<UserProperties appsettings_1development_1json__JsonSchema="" />
		</VisualStudio>
	</ProjectExtensions>

</Project>
